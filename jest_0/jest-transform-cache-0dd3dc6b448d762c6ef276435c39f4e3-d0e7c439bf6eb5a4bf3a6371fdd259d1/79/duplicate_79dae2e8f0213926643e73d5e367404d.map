{"version":3,"sources":["duplicate.js"],"names":["duplicate","params","param","storage","verificationFunction","booleanArray","map","includes","push","module","exports"],"mappings":"AAAA;;;;AAKA,SAASA,SAAT,CAAmB,GAAGC,MAAtB,EAA8B;AAC5B,OAAKC,KAAL,IAAcD,MAAd,EAAsB;AACpB,QAAG,OAAOC,KAAP,KAAkB,QAAlB,IAA6B,OAAOA,KAAP,KAAkB,QAAlD,EAA2D;AACzD,aAAO,2BAAP;AACD;;AAAA;AACF;;AAAA;AAED,QAAMC,OAAO,GAAG,EAAhB;;AACA,QAAMC,oBAAoB,GAAG,MAAM;AACjC,UAAMC,YAAY,GAAG,CAAC,GAAGJ,MAAJ,EAAYK,GAAZ,CAAiBJ,KAAD,IAAW;AAC9C,UAAIC,OAAO,CAACI,QAAR,CAAiBL,KAAjB,CAAJ,EAA6B;AAC3B,eAAO,IAAP;AACD;;AACDC,MAAAA,OAAO,CAACK,IAAR,CAAaN,KAAb;AACA,aAAO,KAAP;AACD,KANoB,CAArB;AAQA,WAAOG,YAAY,CAACE,QAAb,CAAsB,IAAtB,CAAP;AACD,GAVD;;AAYA,SAAOH,oBAAoB,EAA3B;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBV,SAAjB","sourcesContent":["/*\n  A função duplicate recebe uma lista de parâmetros (tamanho variável)\n  e retorna `true` se existe algum elemento duplicado e `false` caso contrário\n */\n\nfunction duplicate(...params) {\n  for (param of params) {\n    if(typeof param !== `string` && typeof param !== `number`) {\n      return 'Insira strings ou numeros';\n    };\n  };\n\n  const storage = [];\n  const verificationFunction = () => {\n    const booleanArray = [...params].map((param) => {\n      if (storage.includes(param)) {\n        return true;\n      }\n      storage.push(param);\n      return false;\n    });\n\n    return booleanArray.includes(true);\n  }\n\n  return verificationFunction();\n}\n\nmodule.exports = duplicate;\n"]}