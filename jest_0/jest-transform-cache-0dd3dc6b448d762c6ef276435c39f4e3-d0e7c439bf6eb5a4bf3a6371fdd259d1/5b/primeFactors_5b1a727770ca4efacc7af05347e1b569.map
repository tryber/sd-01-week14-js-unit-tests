{"version":3,"sources":["primeFactors.js"],"names":["primeFactors","number","decoyNumber","factors","addToFactors","n","includes","push","i","storage","module","exports"],"mappings":"AAAA;;;;AAKA,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,MAAIC,WAAW,GAAGD,MAAlB;AACA,QAAME,OAAO,GAAG,CAAC,CAAD,EAAID,WAAJ,CAAhB;;AACA,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAI,CAACF,OAAO,CAACG,QAAR,CAAiBD,CAAjB,CAAL,EAA0B;AACxBF,MAAAA,OAAO,CAACI,IAAR,CAAaF,CAAb;AACD;AACF;;AACD,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,WAArB,EAAkCM,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAMC,OAAO,GAAGP,WAAhB;;AACA,WAAOA,WAAW,GAAGM,CAAd,KAAoB,CAA3B,EAA8B;AAC5BJ,MAAAA,YAAY,CAACI,CAAD,CAAZ;AACAJ,MAAAA,YAAY,CAACF,WAAD,CAAZ;AACAA,MAAAA,WAAW,IAAIM,CAAf;AACD;;AACDN,IAAAA,WAAW,GAAGO,OAAd;AACD;;AAED,SAAON,OAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBX,YAAjB","sourcesContent":["/*\n  A função primeFactors recebe um número inteiro ${number}\n  e retorna uma lista com todos os fatores desse parâmetro\n*/\n\nfunction primeFactors(number) {\n  let decoyNumber = number;\n  const factors = [1, decoyNumber];\n  function addToFactors(n) {\n    if (!factors.includes(n)) {\n      factors.push(n);\n    }\n  }\n  for (let i = 2; i <= decoyNumber; i += 1) {\n    const storage = decoyNumber;\n    while (decoyNumber % i === 0) {\n      addToFactors(i);\n      addToFactors(decoyNumber);\n      decoyNumber /= i;\n    }\n    decoyNumber = storage;\n  }\n\n  return factors;\n}\n\nmodule.exports = primeFactors;\n"]}