{"version":3,"sources":["duplicate.js"],"names":["duplicate","params","param","storage","booleanArray","forEach","includes","push","module","exports"],"mappings":"AAAA;;;;AAKA,SAASA,SAAT,CAAmB,GAAGC,MAAtB,EAA8B;AAE5B,OAAKC,KAAL,IAAcD,MAAd,EAAsB;AACpB,QAAG,OAAOC,KAAP,KAAkB,QAAlB,IAA6B,OAAOA,KAAP,KAAkB,QAAlD,EAA2D;AACzD,aAAO,2BAAP;AACD;;AAAA;AACF;;AAAA;AAED,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,YAAY,GAAG,CAAC,GAAGH,MAAJ,EAAYI,OAAZ,CAAqBH,KAAD,IAAW;AAClD,QAAIC,OAAO,CAACG,QAAR,CAAiBJ,KAAjB,CAAJ,EAA6B;AAC3B,aAAO,IAAP;AACD;;AACDC,IAAAA,OAAO,CAACI,IAAR,CAAaL,KAAb;AACA,WAAO,KAAP;AACD,GANoB,CAArB;AAOA,SAAOE,YAAY,CAACE,QAAb,CAAsB,IAAtB,CAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["/*\n  A função duplicate recebe uma lista de parâmetros (tamanho variável)\n  e retorna `true` se existe algum elemento duplicado e `false` caso contrário\n */\n\nfunction duplicate(...params) {\n\n  for (param of params) {\n    if(typeof param !== `string` && typeof param !== `number`) {\n      return 'Insira strings ou numeros';\n    };\n  };\n\n  const storage = [];\n  const booleanArray = [...params].forEach((param) => {\n    if (storage.includes(param)) {\n      return true;\n    }\n    storage.push(param);\n    return false;\n  });\n  return booleanArray.includes(true);\n}\n\nmodule.exports = duplicate;\n"]}