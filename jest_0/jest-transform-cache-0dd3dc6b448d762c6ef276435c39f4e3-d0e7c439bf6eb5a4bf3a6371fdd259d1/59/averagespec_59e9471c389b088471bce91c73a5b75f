d7545754ec4b8cbe9957080883aa87ad
const average = require('../src/average'); // A função deve receber uma quantidade qualquer de parâmetros
// A função deve retornar a média dos números que receber
// Caso a função receba algum valor não número, o valor undefined deve ser retornado


describe('#average', () => {
  it('receives any quantity of parameters', () => {
    const averageMock = jest.fn((...params) => average(...params));
    const mathRandom = Math.floor(Math.random() * 10);
    const testParameters = '1'.repeat(mathRandom);
    const parametersArray = [];
    [...testParameters].forEach(each => {
      return parametersArray.push(Number(each));
    });
    expect([...testParameters].length).toBe(expect.any(Number));
    averageMock(...parametersArray);
    expect(averageMock).toHaveReturnedWith(expect.any(Number));
    averageMock('oi');
    expect(averageMock).toHaveReturnedWith(undefined);
  });
  it('expect average of 3, 4, 5 should be 4', () => {
    expect(average(3, 4, 5)).toBe(4);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2ZXJhZ2Uuc3BlYy5qcyJdLCJuYW1lcyI6WyJhdmVyYWdlIiwicmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJhdmVyYWdlTW9jayIsImplc3QiLCJmbiIsInBhcmFtcyIsIm1hdGhSYW5kb20iLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ0ZXN0UGFyYW1ldGVycyIsInJlcGVhdCIsInBhcmFtZXRlcnNBcnJheSIsImZvckVhY2giLCJlYWNoIiwicHVzaCIsIk51bWJlciIsImV4cGVjdCIsImxlbmd0aCIsInRvQmUiLCJhbnkiLCJ0b0hhdmVSZXR1cm5lZFdpdGgiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQXZCLEMsQ0FFQTtBQUNBO0FBQ0E7OztBQUVBQyxRQUFRLENBQUMsVUFBRCxFQUFhLE1BQU07QUFDekJDLEVBQUFBLEVBQUUsQ0FBQyxxQ0FBRCxFQUF3QyxNQUFNO0FBQzlDLFVBQU1DLFdBQVcsR0FBR0MsSUFBSSxDQUFDQyxFQUFMLENBQVEsQ0FBQyxHQUFHQyxNQUFKLEtBQWVQLE9BQU8sQ0FBQyxHQUFHTyxNQUFKLENBQTlCLENBQXBCO0FBQ0EsVUFBTUMsVUFBVSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCLEVBQTNCLENBQW5CO0FBQ0EsVUFBTUMsY0FBYyxHQUFHLElBQUlDLE1BQUosQ0FBV0wsVUFBWCxDQUF2QjtBQUNBLFVBQU1NLGVBQWUsR0FBRyxFQUF4QjtBQUNBLEtBQUMsR0FBR0YsY0FBSixFQUFvQkcsT0FBcEIsQ0FBNEJDLElBQUksSUFBSTtBQUNsQyxhQUFPRixlQUFlLENBQUNHLElBQWhCLENBQXFCQyxNQUFNLENBQUNGLElBQUQsQ0FBM0IsQ0FBUDtBQUNELEtBRkQ7QUFJQUcsSUFBQUEsTUFBTSxDQUFDLENBQUMsR0FBR1AsY0FBSixFQUFvQlEsTUFBckIsQ0FBTixDQUFtQ0MsSUFBbkMsQ0FBd0NGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXSixNQUFYLENBQXhDO0FBQ0FkLElBQUFBLFdBQVcsQ0FBQyxHQUFHVSxlQUFKLENBQVg7QUFDQUssSUFBQUEsTUFBTSxDQUFDZixXQUFELENBQU4sQ0FBb0JtQixrQkFBcEIsQ0FBdUNKLE1BQU0sQ0FBQ0csR0FBUCxDQUFXSixNQUFYLENBQXZDO0FBQ0FkLElBQUFBLFdBQVcsQ0FBQyxJQUFELENBQVg7QUFDQWUsSUFBQUEsTUFBTSxDQUFDZixXQUFELENBQU4sQ0FBb0JtQixrQkFBcEIsQ0FBdUNDLFNBQXZDO0FBQ0QsR0FkQyxDQUFGO0FBZ0JBckIsRUFBQUEsRUFBRSxDQUFDLHVDQUFELEVBQTBDLE1BQU07QUFDaERnQixJQUFBQSxNQUFNLENBQUNuQixPQUFPLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLENBQVIsQ0FBTixDQUF5QnFCLElBQXpCLENBQThCLENBQTlCO0FBQ0QsR0FGQyxDQUFGO0FBR0QsQ0FwQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGF2ZXJhZ2UgPSByZXF1aXJlKCcuLi9zcmMvYXZlcmFnZScpO1xuXG4vLyBBIGZ1bsOnw6NvIGRldmUgcmVjZWJlciB1bWEgcXVhbnRpZGFkZSBxdWFscXVlciBkZSBwYXLDom1ldHJvc1xuLy8gQSBmdW7Dp8OjbyBkZXZlIHJldG9ybmFyIGEgbcOpZGlhIGRvcyBuw7ptZXJvcyBxdWUgcmVjZWJlclxuLy8gQ2FzbyBhIGZ1bsOnw6NvIHJlY2ViYSBhbGd1bSB2YWxvciBuw6NvIG7Dum1lcm8sIG8gdmFsb3IgdW5kZWZpbmVkIGRldmUgc2VyIHJldG9ybmFkb1xuXG5kZXNjcmliZSgnI2F2ZXJhZ2UnLCAoKSA9PiB7XG4gIGl0KCdyZWNlaXZlcyBhbnkgcXVhbnRpdHkgb2YgcGFyYW1ldGVycycsICgpID0+IHtcbiAgICBjb25zdCBhdmVyYWdlTW9jayA9IGplc3QuZm4oKC4uLnBhcmFtcykgPT4gYXZlcmFnZSguLi5wYXJhbXMpKTtcbiAgICBjb25zdCBtYXRoUmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgIGNvbnN0IHRlc3RQYXJhbWV0ZXJzID0gJzEnLnJlcGVhdChtYXRoUmFuZG9tKTtcbiAgICBjb25zdCBwYXJhbWV0ZXJzQXJyYXkgPSBbXTtcbiAgICBbLi4udGVzdFBhcmFtZXRlcnNdLmZvckVhY2goZWFjaCA9PiB7XG4gICAgICByZXR1cm4gcGFyYW1ldGVyc0FycmF5LnB1c2goTnVtYmVyKGVhY2gpKVxuICAgIH0pO1xuXG4gICAgZXhwZWN0KFsuLi50ZXN0UGFyYW1ldGVyc10ubGVuZ3RoKS50b0JlKGV4cGVjdC5hbnkoTnVtYmVyKSk7XG4gICAgYXZlcmFnZU1vY2soLi4ucGFyYW1ldGVyc0FycmF5KVxuICAgIGV4cGVjdChhdmVyYWdlTW9jaykudG9IYXZlUmV0dXJuZWRXaXRoKGV4cGVjdC5hbnkoTnVtYmVyKSk7XG4gICAgYXZlcmFnZU1vY2soJ29pJylcbiAgICBleHBlY3QoYXZlcmFnZU1vY2spLnRvSGF2ZVJldHVybmVkV2l0aCh1bmRlZmluZWQpO1xuICB9KTtcblxuICBpdCgnZXhwZWN0IGF2ZXJhZ2Ugb2YgMywgNCwgNSBzaG91bGQgYmUgNCcsICgpID0+IHtcbiAgICBleHBlY3QoYXZlcmFnZSgzLCA0LCA1KSkudG9CZSg0KTtcbiAgfSk7XG59KTtcbiJdfQ==