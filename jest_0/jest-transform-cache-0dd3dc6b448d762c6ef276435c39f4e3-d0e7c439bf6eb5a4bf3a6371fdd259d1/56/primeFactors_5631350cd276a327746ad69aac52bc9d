707bd03c9990bd5009bfe661ea0912a7
/*
  A função primeFactors recebe um número inteiro ${number}
  e retorna uma lista com todos os fatores desse parâmetro
*/
function primeFactors(number) {
  let decoyNumber = number;
  const factors = [1];

  function addToFactors(n) {
    if (!factors.includes(n)) {
      factors.push(n);
    }
  }

  for (let i = 2; i < decoyNumber; i += 1) {
    if (decoyNumber % i === 0) {
      while (decoyNumber % i === 0 && decoyNumber / i % i === 0) {
        decoyNumber /= i;
      }

      addToFactors(i);
    }
  }

  console.log(factors);
}

module.exports = primeFactors; // addToFactors(i);
// addToFactors(decoyNumber);
// decoyNumber /= i;
// }
// decoyNumber = number;
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByaW1lRmFjdG9ycy5qcyJdLCJuYW1lcyI6WyJwcmltZUZhY3RvcnMiLCJudW1iZXIiLCJkZWNveU51bWJlciIsImZhY3RvcnMiLCJhZGRUb0ZhY3RvcnMiLCJuIiwiaW5jbHVkZXMiLCJwdXNoIiwiaSIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUtBLFNBQVNBLFlBQVQsQ0FBc0JDLE1BQXRCLEVBQThCO0FBQzVCLE1BQUlDLFdBQVcsR0FBR0QsTUFBbEI7QUFDQSxRQUFNRSxPQUFPLEdBQUcsQ0FBQyxDQUFELENBQWhCOztBQUNBLFdBQVNDLFlBQVQsQ0FBc0JDLENBQXRCLEVBQXlCO0FBQ3ZCLFFBQUksQ0FBQ0YsT0FBTyxDQUFDRyxRQUFSLENBQWlCRCxDQUFqQixDQUFMLEVBQTBCO0FBQ3hCRixNQUFBQSxPQUFPLENBQUNJLElBQVIsQ0FBYUYsQ0FBYjtBQUNEO0FBQ0Y7O0FBQ0QsT0FBSyxJQUFJRyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHTixXQUFwQixFQUFpQ00sQ0FBQyxJQUFJLENBQXRDLEVBQXlDO0FBQ3ZDLFFBQUlOLFdBQVcsR0FBR00sQ0FBZCxLQUFvQixDQUF4QixFQUEyQjtBQUN6QixhQUFPTixXQUFXLEdBQUdNLENBQWQsS0FBb0IsQ0FBcEIsSUFBMEJOLFdBQVcsR0FBR00sQ0FBZixHQUFvQkEsQ0FBcEIsS0FBMEIsQ0FBMUQsRUFBNkQ7QUFDM0ROLFFBQUFBLFdBQVcsSUFBSU0sQ0FBZjtBQUNEOztBQUNESixNQUFBQSxZQUFZLENBQUNJLENBQUQsQ0FBWjtBQUNEO0FBQ0Y7O0FBQ0RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUCxPQUFaO0FBQ0Q7O0FBRURRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlosWUFBakIsQyxDQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIEEgZnVuw6fDo28gcHJpbWVGYWN0b3JzIHJlY2ViZSB1bSBuw7ptZXJvIGludGVpcm8gJHtudW1iZXJ9XG4gIGUgcmV0b3JuYSB1bWEgbGlzdGEgY29tIHRvZG9zIG9zIGZhdG9yZXMgZGVzc2UgcGFyw6JtZXRyb1xuKi9cblxuZnVuY3Rpb24gcHJpbWVGYWN0b3JzKG51bWJlcikge1xuICBsZXQgZGVjb3lOdW1iZXIgPSBudW1iZXI7XG4gIGNvbnN0IGZhY3RvcnMgPSBbMV07XG4gIGZ1bmN0aW9uIGFkZFRvRmFjdG9ycyhuKSB7XG4gICAgaWYgKCFmYWN0b3JzLmluY2x1ZGVzKG4pKSB7XG4gICAgICBmYWN0b3JzLnB1c2gobik7XG4gICAgfVxuICB9XG4gIGZvciAobGV0IGkgPSAyOyBpIDwgZGVjb3lOdW1iZXI7IGkgKz0gMSkge1xuICAgIGlmIChkZWNveU51bWJlciAlIGkgPT09IDApIHtcbiAgICAgIHdoaWxlIChkZWNveU51bWJlciAlIGkgPT09IDAgJiYgKGRlY295TnVtYmVyIC8gaSkgJSBpID09PSAwKSB7XG4gICAgICAgIGRlY295TnVtYmVyIC89IGk7XG4gICAgICB9XG4gICAgICBhZGRUb0ZhY3RvcnMoaSlcbiAgICB9XG4gIH1cbiAgY29uc29sZS5sb2coZmFjdG9ycyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJpbWVGYWN0b3JzO1xuXG5cbi8vIGFkZFRvRmFjdG9ycyhpKTtcbi8vIGFkZFRvRmFjdG9ycyhkZWNveU51bWJlcik7XG4vLyBkZWNveU51bWJlciAvPSBpO1xuLy8gfVxuLy8gZGVjb3lOdW1iZXIgPSBudW1iZXI7XG4vLyB9Il19